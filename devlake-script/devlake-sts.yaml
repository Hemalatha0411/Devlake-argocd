apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/instance: devlake
    app.kubernetes.io/name: devlake
    app.kubernetes.io/version: v0.21.0
  name: devlake-mysql
  namespace: devlake
spec:
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Retain
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: devlake
      app.kubernetes.io/name: devlake
  serviceName: devlake-mysql
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: devlake
        app.kubernetes.io/name: devlake
        devlakeComponent: mysql
    spec:
      containers:
      - args:
        - mysqld
        - --character-set-server=utf8mb4
        - --collation-server=utf8mb4_bin
        - --skip-log-bin
        env:
        - name: TZ
          value: UTC
        envFrom:
        - secretRef:
            name: devlake-mysql-auth
        image: mysql:8
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - mysqladmin ping -u root -p$MYSQL_ROOT_PASSWORD
          failureThreshold: 3
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 30
        name: mysql
        ports:
        - containerPort: 3306
          name: mysql
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - mysqladmin ping -u root -p$MYSQL_ROOT_PASSWORD
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: devlake-mysql-data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: devlake-mysql-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 50Gi
      volumeMode: Filesystem
