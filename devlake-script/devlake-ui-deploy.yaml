apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: devlake
    app.kubernetes.io/name: devlake
    app.kubernetes.io/version: v0.21.0
  name: devlake-ui
  namespace: devlake
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: devlake
      app.kubernetes.io/name: devlake
      devlakeComponent: ui
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: devlake
        app.kubernetes.io/name: devlake
        devlakeComponent: ui
    spec:
      containers:
      - env:
        - name: DEVLAKE_ENDPOINT
          value: devlake-lake.devlake.svc.cluster.local:8080
        - name: GRAFANA_ENDPOINT
          value: devlake-grafana.devlake.svc.cluster.local:80
        - name: TZ
          value: UTC
        image: devlake.docker.scarf.sh/apache/devlake-config-ui:v0.21.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health/
            port: 4000
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        name: config-ui
        ports:
        - containerPort: 4000
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health/
            port: 4000
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
